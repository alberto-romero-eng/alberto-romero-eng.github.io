= = = = = = = = = = = = = = = = = = = = = = = = = = =
ELASTICSEARCH - KIBANA -- updated 2023-09-23 08:49
= = = = = = = = = = = = = = = = = = = = = = = = = = =



Note: Following examples asume documents with these attributes:

- Fields "kubernetes.container_name", "log", "timestamp" available.

- Field "kubernetes.container_name" value sample: "bfp".

- Field "log" values samples, referred to in examples: 

L1: "2023-01-30 15:45:55.001 [INFO][a.b.c.class][method:01] event 0FTP0 end".

L2: "2023-01-30 15:45:56.002 [INFO][a.b.c.class][method:02] event 0SYNC0 end".



(1) Kibana query languatte (KQL):

(1.1) Search is by words, which are composed by letters, numbers, and dots.

Per documentation these are special characters: " .,</:-".  Should be surrounded by double-quotes, or escaped with backslash for searching purposes.

Some characters are tokens used by Kibana itself: ':*"()'.

Some words are tokens used by Kibana itself: and, or, field names.

All these aspects should be verified by trial and error.  To test for "complete words" sequences, use star character strategically.

(1.1) Search is by complete  word(s), case insensitive, condition is OR.

kubernetes.container_name : bfp and log : 2023 # finds L1, L2

kubernetes.container_name : bfp and log : 2023 01 30 # finds L1, L2

kubernetes.container_name : bfp and log : 0ftp0 0sync0 # finds L1, L2

(1.2) Double quotes make word order matter, condition is AND, escapes special characters.

kubernetes.container_name : bfp and log : "2023 01 30" # finds L1, L2

kubernetes.container_name : bfp and log : "2023-01-30" # finds L1, L2; dash is not considered component of word, but word separator.

kubernetes.container_name : bfp and log : "0ftp0 0sync0" # finds not L1 nor L2

(1.3) Star character is wildcard for 0 or more letters in word, cannot be used with double-quotes, use alone to obtain entries with valid value.

kubernetes.container_name : bfp and and log: * # finds L1, L2

kubernetes.container_name : bfp and and log: *0* # finds L1, L2, useful for testing word-separator characters

kubernetes.container_name : bfp and and log: *sync* *ftp* # finds L1, L2

kubernetes.container_name : bfp and log : *sync* and log : *bfp* # finds not L1 nor L2

(1.4) Timestamp field is local time.  Field "log" may also contain timestamp references, which are text (words).

Other examples:

kubernetes.container_name : bfp and log: received and log: *login*dep2*

kubernetes.container_name : mlf and log : "2023 02 15T10 50"

kubernetes.container_name : mlf and log : "2023 02 15T10 50" and log : "received response" and log : Login*Dep2

kubernetes.container_name : bfp  and log : "*2023-09-22T09*46*" and log : "*time*" # star is not considered part of word, but word separator

( kubernetes.container_name : bfp )  and  ( log : "2023-09-22T17:44" or log : "2023-09-22T17:45" or log : "2023-09-22T17:46" ) and log: *sync*



(2) Kibana, DevTools section in web-GUI:

(2.1) Check cluster health:
GET _cluster/health

(2.2) Check nodes stats:
GET _nodes_/stats

(2.3) Create index:
PUT favorite_candy

(2.4) Create document, with auto-generated _id:
POST favorite_candy/_doc
{
  "first_name": "Lisa",
  "candy": "Sour Skittles"
}

(2.5) Create document, assigning _id:
PUT favorite_candy/_doc/1
{
  "first_name": "John",
  "candy": "Starburst"
}

(2.6) Create document, assigning _id, verifying not to overwrite existing:
PUT favorite_candy/_create/1
{
  "first_name": "John",
  "candy": "Starburst"
}

(2.7) Read document:
GET favorite_candy/_doc/1

(2.8) Update document:
POST favorite_candy/_update/1
{
  "doc": {
    "candy": "M&Ms"
  }
}

(2.9) delete document:
DELETE favorite_candy/_doc/1

