# BASH HELP SOURCE
# BH updated: 2022-10-09 22:07
a:
alias:  Make aliases, show aliases.  Aliases can contain several commands, but take parameters only at the end (concatenation), not in between, as functions can do.  Aliases have the higher precedence over functions, builtins and executables.  Aliases are not recursive, so no worries with functions/builtins/executables having the same name.  See 'function', 'enable', 'bash' for more details on such precedence.  For diagnostics, see: 'alias <comm>', 'declare -f <comm>', 'which <comm>', 'enable -n'.  Option -p print.  Examples:  alias c='clear'  ;  alias c  ;  alias -p  ;  
apt-cache:  Search regex in packages name/description, according to local information.  Depends on last 'apt update' executed.  See also apt, apt-file, dpkg, dpkg-query.  Options:  --names-only discard other fields regarding search pattern.  Example: apt-cache search --names-only 'aptitude'
apt-file:  Search file in packages (installed or not).  This command uses a repository different from 'apt', which requires separate update.  See 'dpkg -S' for file search in installed packages.  A workflow to install a program would be: (1) `dpkg` to check if program/package is installed; (2) `apt-file` to search package containing program; (3) `apt` to install package.  See also apt, apt-cache, dpkg, dpkg-query.  Actions:  update - update local repository, different from that of apt.  search - indicate repository which provides file.  Options:  -x pattern is regex.  Examples:  apt-file update  ;  apt-file search 'bin/bash'  ;  apt-file search -x 'bin/bash$'  ;  
apt:  A workflow to install a program would be: (1) `dpkg` to check if program/package is installed; (2) `apt-file` to search package containing program; (3) `apt` to install package.  See also apt-cache, apt-file, dpkg, dpkg-query.  Options:  --names-only discard other fields regarding search pattern.  --fix-missing solve faulty package installs.  Examples:  apt search --names-only 'man-db'  ;  apt install --fix-missing 'man-db'  ;  
awk:  Executes curly brackets if line matches pattern.  Option -F field separator.  Can perform flaoting-point operations.  Backreference \0 is matched string.  See cut.  Examples:  ls -l | awk '/a/ { print $1 " " $3 }'  ;  echo '' | awk '{ print 1.1 + 2.2 }'  ;  echo -e '1|A|a\n2|B|b\n3|C|c' | awk -F '|' '{ print $1 ";" $2 ";" $3 ";" }'  ;  awk ' // { if ( $1 == "A" ) { $2 = "isA" } else if ( $1 == "B" ) { $2 = "isB" } else { $2 = "notANorB" } ; print $1 "|" $2 }' file.txt  ;
b:
bash:  Execute shell, string-script or file-script in new bash-child-process (sub-shell).  Environment variable '${$}' is current bash process.  Precedence order: alias, function, builtin, executable.  Aliases are not recursive; functions can be.  Use 'command' in function implementation to avoid recursion.  See also: alias, function, enable, command.  For diagnostics, see: 'alias <comm>', 'declare -f <comm>', 'which <comm>', 'enable -n'.  Options:  -c execute string-script.  -x debug.  -v print each sentence before execution.  Examples:  bash # execute subshell  ;  bash -c 'echo ${$} ; ps ;' # execute string-script  ;  bash -x ./file-script.sh # execute file-script with debug  ;  ./file-script.sh # execute file-script with shebang line (whose options could be customized)
basename:  See dirname, realpath
c:
cmd.exe:  Windows command, useful to execute sentences from git-bash, using option /C.  See also: 'mountvol'.  Examples:  cmd.exe /C 'mountvol /E'  ;  
cmd:  See 'cmd.exe', to execute sentences from git-bash.
cmp:  Compare two binary files.  See 'comm' to compare text files.  Example: cmp file1.bin file2.bin  ;
comm:  Compare two text files.  Requires previous sorting.  Writes three columns: inFileA, inFileB, inFileAAndFileB.  See 'cmp' for binary files comparison.
command:  Allow to use a native command, bypassing an alias/function if set.  Builtins have higher precedence than executables, but can be disabled (see 'enable').  For diagnostics, see: 'alias <comm>', 'declare -f <comm>', 'which <comm>', 'enable -n'.  Examples:  command ls # 'ls' is usually aliased as 'ls color=always'  ;  command pwd --help # try with 'pwd' as builtin and as executable  ;  
cp:  Can be used to copy iso images into unmounted devices for os installation.  Examples:  cp -v debian.iso /dev/sdb  ;  
crontab:
cut:  Print fields separated by a delimiter.  Option -d delimiter.  Option -f fields list.  See awk.  Examples:  echo -e '1,A,a\n2,B,b\n3,D,d\n' | cut -d, -f1,2,3  ;  
d:
date:  Print date acording to different formats.  Useful to get Unix time in seconds.  Options:  +'%F %T' output format using sequences, see examples.  -Iseconds simple output, indicating precision: date, minutes, seconds.  -d --date input timestamp, use '@' for seconds since epoch.  Examples:  date +'%s'  ;  date +'%F %T %:z'  ;  date +'%Y-%m-%d %H:%M:%S %Z'  ;  date -I  ;  date -Idate  ;  date -Iminutes  ;  date -Iseconds  ;  date --rfc-3339=seconds  ;  date -d '@1001001001' +'%F %T %z'  ;  date -d '2001-09-20 11:50:01 -0400' +'%s'  ;  
dd:  Copy byte streams.  It is not as fast as 'cp', 'cat' or 'pv'.  Using 'bs=1M' resulted in best possible speed (tested).  Using 'bs=4M' is recommended by Debian install manuals (not tested yet).  Advantages: (1) Limit input size when option 'count' is set; (2) Query progress with signal SIGUSR1 when in background.  In the tests below WSL was faster than git-bash, per 'dd' execution and per '/dev/random' bytes generation.   Options:  bs=1M block size, here with recommmended value.  count=1K how many blocks to process, skip in most cases.  if=/dev/random input file.  of=f.bin output file.  Examples:  time dd bs=1K count=1K if=/dev/random of=f.bin # increment bs or count to 10K-1M as convenient  ;  dd bs=1M if=f.bin of=f.bin.dd1M & pid=$! ; kill -SIGUSR1 $pid  ;  
declare:  Print available shell variables and functions.  Options:  -A associative.  -a array.  -i integer.  -p print variable.  -f print function.  Examples:  declare -p my_var  ;  declare -f my_function  ;  declare -A myvar=([name]='john', [surname]='doe')  ;  declare -i myint ; myint+=1  ; 
df:  List storage devices, free space, mount point.  Option '-h' human readable size.
dialog:  Create GUIs in bash using nCurses.
diff:  Compare two files line by line.  Options:  -u human readable, git-diff like.  -y side by side comparison, useful to check small variations, like properties.  -b ignore whitespace changes.  -B ignore whiteline changes.  --left-column do not double-print common lines when using -y.  --supress-common-lines do not print common lines when using -y. 
dirname:  See basename, realpath
dmesg:  Query last linux system log entries.
dos2unix:  Convert txt from dos to unix..
dpkg-query:  Same as dpkg, but only for query options: -l, -s, -L, -S.  Shorter manpage.
dpkg:  Indicate installed package status (info); also files contained in installed packages.  See 'apt-file' for file search in not installed packages.  A workflow to install a program would be: (1) `dpkg` to check if program/package is installed; (2) `apt-file` to search package containing program; (3) `apt` to install package.  See also apt, apt-cache, apt-file, dpkg-query.  Options:  -l list packages.  -s [package] status (info) of package.  -L [package] list files in package.  -S [file] search package which contains file.  Examples:  dpkg -l  ;  dpkg -s 'bash'  ;  dpkg -L 'bash'  ;  dpkg -S 'bin/bash'  ; 
du:  Disk usage by each directory.  Option '-h' human readable size.
e:
echo:  Print string. Careful with expansions from vars, to avoid it use double-quotes.  Example: echo * ; echo "*" ; echo $(ls) ; echo "$(ls)" ; echo "${my var}"
enable:  Enable, disable or list builtins.  Builtins have less precedence than aliases and functions but higher than executables.  See also: alias, function, bash, command.  For diagnostics, see: 'alias <comm>', 'declare -f <comm>', 'which <comm>', 'enable -n'.  Options:  -n list disabled builtins or disable builtin if indicated.  Example:  enable -a  ; enable  -n  ;  enable -n true ;  enable +n true
eval:  Execute bash command from string.  Careful with expansions, use double-quotes, see command 'echo'.   Examples: eval 'echo *' ; eval 'echo "*"' ;
expect:  Automate command execution after ssh connection.
f:
fdisk:  Example: fdisk -l
find:  Search files starting from indicated directory, applying several possible selection criteria.  Options:  -name|iname filter by filname, 'ls' like.  -regex|iregex filter by absolute path plus filename.  Examples:  find ./  ;  find ~ -name '*bash*'  ;  find ~ -regex '.*bash.*'  ;  
function:  Declare functions, which can take positional parameters ($1, $2, $3, ...) and environment variables.  After aliases, functions have the higher precedence over builtins and executables.  Different from aliases, functions can be recursive, so careful with using its name into its implementation.  Use 'command' when recursion is not intended.  See also: alias, enable, bash, command.  For diagnostics, see: 'alias <comm>', 'declare -f <comm>', 'which <comm>', 'enable -n'.  Examples:  function my_function { echo $1 $2 $3 ; echo ; echo 'done!' ; } ; my_function  ;  function pwd { echo 'function pwd!!!' ; command pwd ; } # avoiding recursion  ;  
g:
grep:  Filter lines by pattern.  Options:  -v invert selection.  -i insensitive case.  -n line number.  -E extended regex.  -P perl compatible regex, does not require ANSI-C Quoting for hexadecimals.  --color=always|never|auto to highlight match.  -a allow lines with binary (not properly encoded) bytes.  -r recursive search.  -R like -r, also follow links.  Examples:  grep -v -a -P '^.*$' file.txt # (filter lines with binary bytes)  ;  grep -v -a -P '^[\x00-\x7f]*$' f1.txt # (filter lines with non-ascii characters)  ;
h:
i:
ifconfig:
ip:  List, manage network devices.  Example: ip link ; ip link set 'wlan0' up ; ip link set 'wlan0' down ;
j:
join:  Join two files, according to a common field (default: first field ).  Option '-t' field separator. Example:  join -t ',' file1.txt file2.txt  ;  
jp2a:  Convert jpeg to ascii.
k:
l:
less:  Buffer file for readingon secreen.  Options described a contination are for prompt at screen bottom.  Options:  -R raw or display colors.  -M long prompt, works along option -n.  -m short prompt.  -N line number column.  -n line number in prompt.  -J status column.  -S chop long lines.  -s chop empty lines.  -I case insensitive search.  -G highlight search.  Actions:  / - search forward.  ? - search backward.  n - next search result.  N -  previous search result.  & -  filter or grep.
ln:  Create link.  By default, hard link.  Option -s to create soft link.  Careful in MinGW, soft links are not just 'pointers to filenames' as in Linux.  Check always links with ls -li.
lsblk:  List block devices, label can be displayed.  See also: 'mount', 'umount', 'parted'.  Options:  -O show all fields/columns.  Examples:  lsblk  ;  lsblk -O | less -M -S  ;  
lspci:  List devices associated to motherboard (usb, video, sound, wifi, lan), with brand and description.
m:
mount:  Without params lists mounted points and info. With params mount points or devices.  See also: 'umount', 'lsblk', 'mountvol' (windows).  Examples:  mount ; mount -o 'remount,rw' /dev/sda2
mountvol:  Windows command, equivalent to Unix 'mount'.  With no args, shows help and lists volumes available, mounted and not mounted.  See also 'cmd.exe'.  Options:  /P unmount.  /E enable automatic mountig of new volumes.  Examples:  cmd.exe /C 'mountvol'  ;  cmd.exe /C 'mountvol F:\ /P' # unmount F drive  ;  cmd.exe /C 'mountvol F:\ \\?\Volume{96d242db-1b4f-11ed-ab66-d8cb8a835833}\' # mount specified volume as F drive  ;  cmd.exe /C 'mountvol /E' # enable automatic mounting of new volumes  ;  
n:
nl:  Number lines in file.  Example: nl file.txt > file.nl.txt
nmap:
nohup:  Pending
nslookup:
ntfsfix:  Fix ntfs filesystem partition or mounting. Example: ntfsfix /media/don/docs
o:
od:  Octal/hexadecimal dump of file.  See also 'xxd'.  Options:  -An supress file offset (left index column).  -tx1 hexadecimal format, one-byte grouped.  -w8 number of bytes per line, eight in this case.  -v supress *.  Examples:  od -v -An -tx1 file.bin > file.hex.txt  ;  echo -e 'AAAA\nBBBB\nCCCC\DDDD\nEEEE\nFFFF' | od -v -An -tx1 -w8  ;  
p:
parted:  Create labels and partitions (format drive).  Target drive should be unmounted.  See also: 'umount', 'lsblk'.  Actions:  mklabel create label; values 'msdos', 'gpt'.  mkpart create partition; values 'primary', 'logical', 'extended'.  Options:  -a alignment; value 'opt' for optimal.  Examples:  parted -a opt /dev/sdx mklabel msdos 0 9G # prompt message, change 0 to 2048s  ;  parted -a opt /dev/sdx mkpart primary 0 9G # prompt message, change 0 to 2048s  ; 
patch:  Apply diffs to text files.  See also diff.  Options:  -R reverse.  Examples:  echo 'a' > f1.txt ; echo -e 'a\nb' > f2.txt ; diff f1.txt f2.txt > script.patch  ;  patch f1.txt script.patch  ;  patch -R f1.txt script.patch  ;  
ping:
printf:  Print formated, more strict than echo.  Examples:  printf %20s 'hello'  ;  printf %b '\x01\x02\x03'  ; 
process substitution:  Process stdin/stdout behaves "like a file".  Examples: cat <( ls ) ; ls > >( grep 'txt' ) ;
ps:  List system processes. Example: ps -o pid,uid,%cpu,%mem,command ax
pv:  Like cat, printing progress bar on stderr.
q:
r:
realpath:  See basename, dirname
rsync:  Like scp, but more efficient.
s:
screen:  Share screen with other session over ssh.
sed:  Mainly for line by line substitution if criteria is met.  Can also print specific line.  Backreference '\0' is entire pattern match.  Escape sequences '\U' or '\L' to upper or lower case backreference.  Options:  -E extended re.  -i.old inplace modify, create backup file with suffix.  -b do not erase \x0d (cr).  Examples:  sed -E '{ s/cat/dog/ig }' file.txt  ;  sed -n '{ 4p }' file.txt  ;  sed -f script.sed file.txt  ;  sed -E '{ s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g }' color-log.txt > no-color-log.txt  ;  sed -E '{ s/(.)$/\1\n/g }' file.txt > file_double_newline.txt  ;  grep --color=never -r 'word' ./ | sed -E '{ s/^([^:]+):.+$/\1/ }' # print files containing 'word'  ;  sed -E '{ s/(.)$/\1\n/g }' log.txt > log.in-between-white-line.txt  ;  sed -b -E '{ s/(\x0d)$/\1\n\1/g }' log.cr-nl.txt > log.cr-nl.in-between-white-line.txt  ;  
seq:  Print sequence.  Examples: seq 5  ;  seq 0 5  ;  seq 0  0.5  5  ; 
sort:  Order file lines, ascii criteria
source:  Executes bash script as current shell/process, not as sub-shell/sub-process.
split:  Split file
stty:  Config / properties of shell.  Option 'size' to get screen size.  Example: stty size  ;
systemctl:  Check / manage services.  Enable/disable is related to system startup.  Examples:  systemctl list-units --type=service --state=running  ;  systemctl status tomcat9  ;  systemctl disable tomcat 9
t:
time:  Count time a process take to run.  Example: time sleep 5 ;
timeout:  Kill a process after n seconds.  Exmample: timeout 2 sleep 5 ;
tr:  Translate characters, one by one.  Option -d delete caracter(s).  Examples:  echo 'a i u o e' | tr 'aeiou' 'AEIOU'  ;  echo -E 'a\ne\ni\no\nu' | tr -d '\n'  ;  echo 'a i u o e' | tr '[:lower:]' '[:upper:]'  ;  
truncate:  Eliminate bytes or characters from file.  Useful to eliminate trailing newline from text files.  Example: truncate -s -1 file.txt ;
type:  Indicate type of command: alias, function, builtin or executable from $PATH.  See also: which.  Example: type ls  ;
u:
ulimit:  Show hardware limit settings
umount:  Unmount drive.  See also: 'mount', lsblk, 'mountvol' (windows).  Examples:  umount /dev/sdb  ;   
uniq:  In a sorted file, eliminate duplicate lines.  Example: uniq file.sort.txt.old > file.sort.uniq.txt  ;
unix2dos:  Convert txt from unix to dos.
unset:  Unset variables or functions in shell.  Example: unset my_var ; unset -f my_function 
update-grub:  Apply changes made on /etc/default/grub file.  Sometimes "grub-install" may be better.
users:  Pending
v:
vi:  Default bash text editor.  Actions described are for prompt at screen bottom.  Actions:  ESC (press several times) clean prompt or exit insert mode.  i insert mode.  :w write file.  :q quit.  :q! quit without changes.  yy copy (yank) line.  p paste line.  dd delete line.  dw delete word.  d (arrow) delete character.  / search regex, forward.  ? search regex, backwards.  n next search result.  N previous search result.  ctrl+Begin|End|(arrows) and Begin|End fast cursor motion.  :%s/{regex}/{string}/{flags} for substituion, omit % for substitution in current line only.  :%s/{regex}//gn to count matches.  :set number|nonumber to display line numbers.  :set hlsearch|nohlsearch to highlight search matches.  :u undo.   
w:
wc:  Count lines, words and characters or bytes.  Find line with max length.  Options: -l -w -c -L.  Example: wc file.txt  ;  wc -L file.txt
which:  Indicate if executable file is available from $PATH.  See also type.  Examples:  which ls  ;  which pwd # 'pwd' can be builtin or executable  ; 
who:  List users signed in.
whoami:  Current shell user.
x:
xxd:  Hexadecimal dump of file or stdin.  Useful as reminder of special/control ascii chars/bytes.  See also 'od'.  Options:  -c output columns (16 by default).  -ps simple hexadecimal dump.  -r along with -ps, reverse operation (hexadecimal to binary).  Examples:  echo -e -n 'A\x1fB' | xxd  ;  xxd -c8 file.bin  ;  xxd -ps file.bin  ;  xxd -ps -r file.hex.txt > file.bin  ;  
y:
yes:  Produces bulk output; with head limits quantity.  Example: yes 'hello world' | head -10
z:
