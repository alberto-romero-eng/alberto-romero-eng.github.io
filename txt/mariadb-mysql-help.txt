= = = = = = = = = = = = = = = = = = = = = = = = = = = =
MariaDB binaries install - updated: 2023-07-29 09:47
= = = = = = = = = = = = = = = = = = = = = = = = = = = =



(1) Place files in appropiate installation directory



(2) At cmd, "bin" folder, run "mariadb --help", check default locations for file "my.ini"; root directory installation is usually indicated



(3) Content of file "my.ini":

[mysqld]

# main properties

datadir=/opt/mariadb/mariadb-10.6.5/data

port=3306

max_connections=10

innodb_buffer_pool_size=1269M

character-set-server=utf8

# timeouts (waiting time before disconnect), in seconds

### connection package from client

connect_timeout = 10

### input data from client (example: client batch process)

net_read_timeout = 30

### lifetime of idle client connection

wait_timeout = 600

### overrides "wait_timeout" in interactive client connection

interactive_timeout = 600


[client]

port=3306

plugin-dir=/opt/mariadb/mariadb-10.6.5/lib/plugin



(4) Pending: 

How to make initial connection? 

How to configure superuser "root", its password? 

Review "mariadb-install-db" command



(5) Start server daemon:

mariadbd --console

It's also possible to start several services, each referring to a specific ini file:

mariadbd --defaults-file=D:\opt\mariadb\mariadb-10.6.5\my.dev-0.ini --console

mariadbd --defaults-file=/etc/mariadb/maria.ini --console

In each .ini file, adjust 'datadir' and 'port' as convenient.



(6) Test Mariadb client, from shell/cmd:

Execution, interactive console/shell (test need of winpty):

winpty mysql --user=root --password=1234 --host=127.0.0.1 --port=3306 --database=information_schema


Execution, batch console/shell (test need of --database, -D):

mysql -B -u root --password=1234 -h 127.0.0.1 -P 3306 -D information_schema -e 'select 1 as my_integer;'

echo 'select 1 as myint' | mysql -B -u root --password=1234 -h 127.0.0.1 -P 3306

mysql -B -u root --password=1234 -h 127.0.0.1 -P 3306 < <( echo 'select 1 as myint;' )


Other console/shell options:

-p: prompt for password

-e, --execute "SELECT 1 AS my_integer;": execute sql, connection is set as non-interactive

-E, --vertical: transpose result, columns as rows

--connection-timeout=30: set 30 secs to wait for connection package before disconnect


Console output options:

-t, --table: human-friendly output, not useful for post-processing

-B, --batch: connect as non-interactive client, output is silent (tabbed) with column names

-s, --silent: tabbed output, no column names, see batch option

-X, --xml: xml output

-H, --html: html output

--column-names: print column names (see options batch, silent)

--line-numbers: print line number on error

-v: verbose output



(7.1) Check variables from client (parameters in my.ini):

(7.1.1) Global variables

SHOW VARIABLES LIKE '%version%';

SHOW VARIABLES LIKE '%timeout%';

SHOW TABLES WHERE Tables_in_information_schema LIKE '%variable%'

SELECT * FROM global_variables LIMIT 1

SELECT * FROM global_variables WHERE variable_name LIKE '%timeout%'

(7.1.2) Session variables

(pending)



(7.2) Check processlist from client (connected clients):

SHOW PROCESSLIST;

SELECT * FROM information_schema.`PROCESSLIST` WHERE TRUE AND HOST LIKE '51.210.159%';



(7.3) Check databases, tables, status from client:

SHOW DATABASES LIKE '%dev%';

SHOW TABLES LIKE '%product%';

SHOW OPEN TABLES LIKE '%product%';

SHOW STATUS LIKE '%connection%';

SHOW PROFILES ; -- deprecated, use Performance_Schema instead



(7.4) TEMPORAL, ORDER, TODO:

USE information_schema ;

-- variables
SHOW SESSION VARIABLES LIKE '%wait%timeout%' ; -- wait_timeout
SHOW SESSION VARIABLES LIKE '%int%timeout%' ; -- interactive_timeout
SHOW SESSION VARIABLES LIKE '%read%timeout%' ; -- net_read_timeout
SHOW SESSION VARIABLES LIKE '%max%conn%' ; -- max_connections, extra_max_connections
SHOW SESSION VARIABLES LIKE '%timeout%' ; -- other

-- status
SHOW GLOBAL STATUS ;
SHOW GLOBAL STATUS LIKE '%thread%conn%'; -- threads_connected
SHOW GLOBAL STATUS LIKE '%connections%'; -- connections (total/accumulated), max_used_connections (peak/max demand)
SHOW GLOBAL STATUS LIKE '%conn%'; -- other
SELECT CONNECTION_ID(); -- current session connection_id

-- processlist
SHOW PROCESSLIST ;

-- table from constants, several rows
SELECT 1 AS my_int UNION SELECT 2 UNION SELECT 3 ;



(7.5) TEMPORAL, ORDER, TODO:

-- test "wait_timeout"
-- how to test "net_read_timeout"?
{ sleep 0 ; echo 'select connection_id();' ; echo "show global variables like '%wait%timeout%';" ; echo "show global variables like '%read%timeout%';" ; sleep 0 ; echo 'select connection_id();' ; echo 'show processlist;' ; sleep 0 ; } | mysql -s -u root -h 127.0.0.1 -P 3306 -D information_schema --password=1234 ;



(8) mysqldump, commandline utility:

mysqldump -u root --password=1234 -h localhost -P 3306 -B db01 db02 db03 | tr -d '\r' > dump-file.sql

mysqldump -u root --password=1234 -h localhost -P 3306 --add-drop-database --add-drop-table --skip-extended-insert --databases db01 db02 > dump-file.sql


Options:

B, --databases: databases to include in dump file

--add-drop-database

--add-drop-table

--skip-extended-insert: individual INSERT for each table row



(9) TEMPORAL, ORDER, TODO:

(9.1) initialization, install
mysqld --initialize --console
mysql -h localhost --password=mypassword --port 3306
ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyN3wP4ssw0rd'; flush privileges; exit; 
2023-03-29T09:53:08.756860Z 1 [Note] A temporary password is generated for root@localhost: XtzgNrz,n4-I

(9.2) get db version
SHOW VARIABLES LIKE 'version'; 

(9.3) mysql does not support "returning" token, do instead:
START TRANSACTION ;
INSERT INTO table(fields) VALUES (values) ;
SELECT LAST_INSERTED_ID() ;
COMMIT ; 




(10) TEMPORAL, ORDER, FAST-SQL SCRIPT:

#! /bin/bash

### variables
user='my_user'
host='my_host'
port='3306'
pass='my_password'
db='my_database'

### test query
echo -e '\n-->query 1, test:'
mysql -B -u $user --password=$pass -h $host -P $port -D $db -e 'select 1 as my_integer;'

### intended query, insert
echo -e '\n-->query 2, insert:'
# i=${1}   # command-line value assignment
i='10'     # direct value assignment
while [ $i -lt '12' ] ; do
    echo '--->i:'$i
    sql='USE '${db}'; '
    sql=${sql}'INSERT INTO `my_table` (`id`,`created_at`,`cif`,`bit_switch`) '
    sql=${sql}"VALUES ('id_prefix_"${i}"',NOW(),'123456789',UNHEX('01')); "
    echo $sql
    mysql -B -u $user --password=$pass -h $host -P $port -D $db -e "$sql"
    let 'i++'
    echo ''
done ;

### end of script



(11) TEMPORAL, ORDER, Temporally turn off constraints check

SET foreign_key_checks = 0; -- turn off

SET foreign_key_checks = 1; -- turn on



(12) TEMPORAL, ORDER, Date, Timestamp, time difference

DATETIME can store a wider range of values than TIMESTAMP. While DATETIME can store values from '1000-01-01 00:00:00.000000' to '9999-12-31 23:59:59.999999', TIMESTAMP can store values from '1970-01-01 00:00:01.000000' to '2038-01-19 03:14:07.999999 .

SELECT TIMESTAMPDIFF(SECOND, timestamp_start, timestamp_end) AS ts_difference ; -- only with TIMESTAMPS -- unit can be MICROSECOND , SECOND , MINUTE , HOUR , DAY , WEEK , MONTH , QUARTER , YEAR

SELECT (UNIX_TIMESTAMP(end_datetime) -  UNIX_TIMESTAMP(start_datetime)) AS diff_secs FROM execution WHERE id = 4000 ;  -- arg can be TIMESTAMP, DATETIME, DATE, TIME



(13) TEMPORAL, ORDER, temporary tables

-- temporary tables live in memory only during user db session

CREATE TEMPORARY TABLE `tmp_person` SELECT p.name, p.age FROM `person` p LIMIT 0 ; -- also use joins if necessary

INSERT INTO `tmp_person` SELECT p.name, p.age FROM `person` p WHERE p.age > 18 ; -- add more 'where' clauses if ncecessary

SELECT * FROM `tmp_person` t_p WHERE REGEXP '^alberto.*' ; -- do operations using temporary table

DROP TEMPORARY TABLE `tmp_person` ; -- drop temporary table



(14) TEMPORAL, ORDER, regex  -- this is different in v5 and v8! caution!

-- These tests where done on mysql v5.7 ; REGEXP is case insensitive unless BINARY option is used

SELECT ('ALBERTO' REGEXP 'Alberto') AS re ;

SELECT ('ALBERTO' REGEXP BINARY 'Alberto') AS re ;

SELECT `name` FROM person p WHERE p.name REGEXP 'alberto' ; 

-- Per documentation, this function changes on v5.8, tests not performed


