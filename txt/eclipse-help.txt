= = = = = = = = = = = = = = = = = = = = = = = = = = = =
ECLIPSE CUSTOMIZATION -- updated 2024-05-17 02:55
= = = = = = = = = = = = = = = = = = = = = = = = = = = =



(1) Download links: "Download packages" or "Eclipse packages", then "Eclipse IDE for Java Developers", zip file.

Sugested installation folder: "/opt/eclipse/eclipse-java-YYYY.MM.R".



(2) Before start Eclipse, check/adjust values in "eclipse.ini" file.

See also: https://wiki.eclipse.org/Eclipse.ini

(2.1) Configuration area (default value: "@user.home/.eclipse"):

(-vmargs ...)

-Dosgi.configuration.area=file:/D:/opt/_eclipse-java-YYYY.MM.R-configuration

(2.2) Workspace area (default value:"@user.home/eclipse-workspace" ):

(-vmargs ...)

-Dosgi.instance.area.default=file:/D:/opt/_eclipse-java-YYYY.MM.R-workspace

It might be useful to enable long paths/filenames in Windows-OS environment, to avoid crashes.

(2.3) Edit heap memory size (default: 256m and 2048m):

(-vmargs ...)

-Xms32m

-Xmx1024m

(2.4) Add lombook library in eclipse.ini and in eclipse root folder:

(-vmargs ...)

-javaagent:lombok-1.18.24.jar

Lombok source: https://repo1.maven.org/maven2/org/projectlombok/lombok/1.18.24/



(3) Start Eclipse, adjust Workspace.

(3.1) Pick new or existing workspace folder:

File > Switch Workspace > Other...

Suggested folder: "D:/opt/_eclipse-YYYY.MM.R-workspace/" (see 2.2, "workspace area" in "eclipse.ini").

(3.2) Edit workspace history:

Window > Preferences > General > Startup and Shutdown > Workspaces

(3.3) Manage window titles (enable workspace-full-path, product-name, perspective):

Window > Preferences > General > Workspace

(3.4) Manage build options (disable save and build automatically):

Window > Preferences > General > Workspace > Build



(4) Adjust maven local repository path

(4.1) Adjust external 'settings.xml' file in 'Global' and 'User' fields:

Window -> Preferences -> Maven -> User Settings

(4.2) Check correct path of '.m2' (or '_m2') folder:

Window -> Preferences -> Java -> Build Path -> Classpath Variables



(5) Adjust default JRE and compilation-settings for workspace

(5.1) Add or edit available JREs:

Window -> Preferences -> Java -> Installed JREs

Optional: default eclipse JRE can be eliminated, leaving only customized ones.

(5.2) Verify default workspace JRE:

Window -> Preferences -> Java -> Build Path -> Classpath Variables

(5.3) Compilation is done by JDK indicated in '-vm' option, 'eclipse.ini' file.

Compilation settings (JDK version),  adjusted at:

Window -> Preferences -> Java > Compiler



(6) Set dark colors for IDE:

(Darkest Dark Theme from Eclipse-Marketplace is not necessary).

(6.1) Select 'dark' in 'theme' selector at:

Window -> General -> Apearance

(6.2) Next indication seems deprecated (since "Dark Theme" plugin is not necessary):

Window -> Preferences -> DevStyle

Select 'Primary Colors' as icon-style.



(7) Add lombok to ini file (do not add empty lines)

(-vmargs ...)

-javaagent:lombok-1.18.24.jar



(8) Test eclipse

(8.1) Use debgugger with a simple project, when asked by window/prompt, click on remember to switch to debugging view.

(8.2) Check lombook, pojo with annotations @Getter, @Setter, @NoArgsConstructor should not indicate error/warning.



(9) Optional:

(9.1) Indentation, set only spaces: 

Create new profile (default is "Eclipse [built-in]"), adjust  "Indentation" at:

Window > Preferences > Java > Code Style > Formatter > Edit

(9.2) Not recommended, add icon scaling to eclipse.ini file (do not add empty lines):

(-vmargs ...)

-Dswt.enable.autoScale=true

-Dswt.autoScale=120

-Dswt.autoScale.method=nearest



(10) Plugins

(10.1) Suggested plugins: Wild Web Developer Tools (html, css, js), Thymeleaf Content Assist, YAML Editor, SQL Editor, JAXB Support

(10.2) Check already installed plugins: 

Help > About Eclipse IDE > Installation Details



(11) Some usage notes.

(11.1) Project Nature:

- Java/Maven/SpringBoot: like Java/Maven.

- Java/Maven: there is pom.xml, compiled files in 'target' folder, jar file generated, compilation and execution managed from commandline (maven) or ide (eclipse).

- Java: no pom.xml, compiled files in 'bin' folder, compilation and execution from commandline is cumbersome (jdk: java, javac, jar), better managed from ide (eclipse run/debug configuration).

(11.2) Workspace temporal files mainly in: "/{workspace}/.metadata/.plugins/org.eclipse.jdt.core".

When Eclipse is closed or up with no projects open, can be 30MB.

Each project increments workspac temporal files, depending on its size, ~100-300MB.

(11.3) To change workspace, delete configuration area dir and restart eclipse.

(11.4) Workspace, depending on open projects, hardly requires more than 1GB when eclipse is open, with several projects.  Configuration requires very little, less than 10MB.

(11.5) A simple java project in nature requires minimum -Xms1m and -Xmx2m (1MB and 2MB respectively).

A debugging connection from Eclipse or VisualVM monitoring connnection to the process requires 2MB.

Hence, for a minimal simple java project, it is recommended at least -Xms1m and -Xmx8mb.

